{"version":3,"sources":["AppContext.tsx","Anonymous/home.tsx","Anonymous/login.tsx","Anonymous/index.tsx","Authenticated/dashboard.tsx","Authenticated/profile.tsx","Authenticated/profile-edit.tsx","Authenticated/index.tsx","App.tsx","index.tsx"],"names":["defaultSession","user","defaultContext","session","setSession","instance","React","createContext","Home","to","Login","useState","userName","setUserName","password","setPassword","showError","setShowError","history","useHistory","appContext","useContext","AppContext","style","backgroundColor","color","fontWeight","padding","marginBottom","display","type","placeholder","onChange","e","target","value","onClick","push","Anonymous","exact","path","Dashboard","Profile","EditProfile","htmlFor","id","defaultValue","Authenticated","href","PrivateRoute","children","isAuthenticated","rest","render","location","pathname","state","from","App","length","Provider","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b69b978c.chunk.js","sourcesContent":["import React from \"react\";\n\ninterface Session {\n  user: string;\n}\n\ninterface ContextData {\n  session: Session;\n  setSession: (session: Session) => void;\n}\n\nconst defaultSession = { user: \"user\" };\n\nconst defaultContext: ContextData = {\n  session: defaultSession,\n  setSession: function (session) {},\n};\n\nexport default {\n  defaultSession: defaultSession,\n  instance: React.createContext<ContextData>(defaultContext),\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Home() {\n  return <Link to=\"/login\">Hello, stranger! You're not signed in.</Link>;\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport AppContext from \"../AppContext\";\n\nexport default function Login() {\n  const [userName, setUserName] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [showError, setShowError] = React.useState(false);\n\n  let history = useHistory();\n  const appContext = React.useContext(AppContext.instance);\n\n  const isValid = () => userName === \"user\" && password === \"test\";\n\n  function handleLogin() {\n    if (!isValid()) {\n      setShowError(true);\n      return;\n    }\n\n    setShowError(false);\n    appContext.setSession({ ...appContext.session, user: userName });\n    history.push(\"/app/dashboard\");\n  }\n\n  return (\n    <fieldset>\n      <legend>Login</legend>\n      <div\n        style={{\n          backgroundColor: \"red\",\n          color: \"white\",\n          fontWeight: \"bold\",\n          padding: 10,\n          marginBottom: 15,\n          display: showError ? \"block\" : \"none\",\n        }}\n      >\n        Oops, user name or password are incorrect.\n      </div>\n      <input\n        type=\"text\"\n        placeholder=\"User name\"\n        onChange={(e) => setUserName(e.target.value)}\n      />\n      <br />\n      <input\n        type=\"password\"\n        placeholder=\"Password\"\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <br />\n      <button onClick={handleLogin}>Get in</button>\n    </fieldset>\n  );\n}\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport Home from \"./home\";\nimport Login from \"./login\";\n\nexport default function Anonymous() {\n  return (\n    <div>\n      <Link to=\"/\">Home</Link> | <Link to=\"/login\">Login</Link>\n      <hr />\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route exact path=\"/login\">\n          <Login />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n","import React from \"react\";\nimport AppContext from \"../AppContext\";\n\nexport default function Dashboard() {\n  const appContext = React.useContext(AppContext.instance);\n  return <div>Welcome {appContext.session.user}!</div>;\n}\n","import React from \"react\";\nimport AppContext from \"../AppContext\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Profile() {\n  const appContext = React.useContext(AppContext.instance);\n\n  return (\n    <div>\n      Hello, {appContext.session.user}! Go ahead and{\" \"}\n      <Link to=\"/app/profile/edit\">edit</Link> your name.\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport AppContext from \"../AppContext\";\n\nexport default function EditProfile() {\n  const appContext = React.useContext(AppContext.instance);\n  const [userName, setUserName] = React.useState(appContext.session.user);\n  let history = useHistory();\n\n  function update() {\n    appContext.setSession({ ...appContext.session, user: userName });\n    history.push(\"/app/profile\");\n  }\n\n  return (\n    <div>\n      <label htmlFor=\"userName\">User name:</label>\n      <br />\n      <input\n        type=\"text\"\n        id=\"userName\"\n        defaultValue={appContext.session.user}\n        onChange={(e) => setUserName(e.target.value)}\n      />\n      <br />\n      <button onClick={update}>Update</button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport AppContext from \"../AppContext\";\nimport Dashboard from \"./dashboard\";\nimport Profile from \"./profile\";\nimport EditProfile from \"./profile-edit\";\n\nexport default function Authenticated() {\n  const appContext = React.useContext(AppContext.instance);\n  const logout = () => {\n    appContext.setSession({ ...appContext.session, user: \"\" });\n  };\n\n  return (\n    <div>\n      <Link to=\"/app/dashboard\">Dashboard</Link> |{\" \"}\n      <Link to=\"/app/profile\">Profile</Link> |{\" \"}\n      <a href=\"/login\" onClick={logout}>\n        Logout\n      </a>\n      <hr />\n      <Switch>\n        <Route exact path=\"/app/dashboard\">\n          <Dashboard />\n        </Route>\n        <Route exact path=\"/app/profile\">\n          <Profile />\n        </Route>\n        <Route exact path=\"/app/profile/edit\">\n          <EditProfile />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nimport AppContext from \"./AppContext\";\nimport Anonymous from \"./Anonymous\";\nimport Authenticated from \"./Authenticated\";\n\ninterface IPrivateRouteProps {\n  children: React.ReactNode;\n  path: string;\n  isAuthenticated: Boolean;\n}\n\nfunction PrivateRoute({\n  children,\n  isAuthenticated,\n  ...rest\n}: IPrivateRouteProps) {\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isAuthenticated ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nexport default function App() {\n  const [session, setSession] = React.useState(AppContext.defaultSession);\n  const isAuthenticated = session.user?.length > 0;\n\n  return (\n    <Router>\n      <h1>React + TypeScript Test</h1>\n      <AppContext.instance.Provider\n        value={{ session: session, setSession: setSession }}\n      >\n        <Switch>\n          <Route exact path=\"/\">\n            <Anonymous />\n          </Route>\n          <Route exact path=\"/login\">\n            <Anonymous />\n          </Route>\n          <PrivateRoute isAuthenticated={isAuthenticated} path=\"/app\">\n            <Authenticated />\n          </PrivateRoute>\n        </Switch>\n      </AppContext.instance.Provider>\n    </Router>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}